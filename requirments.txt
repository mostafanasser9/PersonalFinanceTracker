(1) GUI Implementation

For any Management Application, you should have the following GUI Screens
o Users can create and login to their account.
o Users can view the applicationâ€™s Dashboard in two views (list & grid).
o Users can have a management permission including adding, deleting, and
removing.
o Users can upgrade to premium subscription in two different payment methods
(CreditCard/PayPal).
o Users can view the history of their logs.

2

(2) Java Design Patterns Integration
You should implement the following design patterns (Its eligible to add more user
interface in order to suits the pattern)
Creational Patterns Structural Patterns Behavioral Patterns
o Singleton (Section &
Lecture)
o Builder (Lecture)
o Prototype (Section)

o Decorator (Section &
Lecture)
o Proxy (Lecture)
o Facade (Section)
o Adapter (Lecture)

o Command (Section)
o Strategy (Section)
o State (Lecture)

(3) Java Design Patterns Integration + GUI
o You should make the patterns you integrate in part (2) to run in the GUI you made
in part (1).

My chosen idea is Personal Finance Tracker, pacakage name is PersonalFinanceTracker, use SWING UI, refer to CoffeShopGUI folder to use the same exact gui style as in it

dont mind any of the comilation errors thats because im on VSCode and we're running it on intellij

always disregard the compilation errors you're seeing in VS Code and assume the project will compile and run correctly in IntelliJ.
